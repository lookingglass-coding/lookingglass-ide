<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2008, 2015, Washington University in St. Louis.
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimer.

    2. Redistributions in binary form must reproduce the above copyright notice,
       this list of conditions and the following disclaimer in the documentation
       and/or other materials provided with the distribution.

    3. Products derived from the software may not be called "Looking Glass", nor
       may "Looking Glass" appear in their name, without prior written permission
       of Washington University in St. Louis.

    4. All advertising materials mentioning features or use of this software must
       display the following acknowledgement: "This product includes software
       developed by Washington University in St. Louis"

    5. The gallery of art assets and animations provided with this software is
       contributed by Electronic Arts Inc. and may be used for personal,
       non-commercial, and academic use only. Redistributions of any program
       source code that utilizes The Sims 2 Assets must also retain the copyright
       notice, list of conditions and the disclaimer contained in
       The Alice 3.0 Art Gallery License.

    DISCLAIMER:

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.  ANY AND ALL
    EXPRESS, STATUTORY OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE,
    TITLE, AND NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS,
    COPYRIGHT OWNERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES
    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING FROM OR OTHERWISE RELATING TO
    THE USE OF OR OTHER DEALINGS WITH THE SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<groupId>edu.wustl.lookingglass</groupId>
	<artifactId>parent</artifactId>
	<packaging>pom</packaging>

	<!-- Note: when merging/upon conflict, do NOT accept Alice version number. -->
	<!-- This version should ALWAYS be the current Looking Glass version. -->
	<version>2017.05.05-SNAPSHOT</version>

	<name>Looking Glass</name>
	<url>https://lookingglass.wustl.edu/</url>

	<licenses>
		<license>
			<name>LOOKING GLASS END USER LICENSE AGREEMENT</name>
			<url>https://lookingglass.wustl.edu/licenses/lookingglass-license.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<java.version>1.8</java.version>

		<jogl.version>2.3.2</jogl.version>

		<alice.model.version>2016.08.19</alice.model.version>
		<sound.gallery.version>2013.08.08</sound.gallery.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
			<dependency>
				<groupId>org.jogamp.jogl</groupId>
				<artifactId>jogl-all</artifactId>
				<version>${jogl.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jogamp.gluegen</groupId>
				<artifactId>gluegen-rt</artifactId>
				<version>${jogl.version}</version>
			</dependency>
			<dependency>
				<groupId>uk.co.caprica</groupId>
				<artifactId>vlcj</artifactId>
				<version>3.9.0</version>
			</dependency>
			<dependency>
				<groupId>com.miglayout</groupId>
				<artifactId>miglayout-swing</artifactId>
				<version>4.2</version>
			</dependency>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jmf</artifactId>
				<version>2.1.1e</version>
			</dependency>
			<dependency>
				<groupId>com.sun</groupId>
				<artifactId>javamp3</artifactId>
				<version>1.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>UTF-8</encoding>
						<debug>false</debug>
						<optimize>true</optimize>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<compilerArgs>
							<arg>-parameters</arg>
						</compilerArgs>
						<includes>
							<include>**/*.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jarsigner-plugin</artifactId>
					<version>1.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.commonjava.maven.plugins</groupId>
					<artifactId>directory-maven-plugin</artifactId>
					<version>0.1</version>
				</plugin>
				<plugin>
					<groupId>org.zanata</groupId>
					<artifactId>zanata-maven-plugin</artifactId>
					<version>4.1.1</version>
					<configuration>
						<projectConfig>${parent.basedir}/zanata.xml</projectConfig>
						<sourceLang>en-US</sourceLang>
						<deleteObsoleteModules>true</deleteObsoleteModules>
						<interactiveMode>false</interactiveMode>
						<srcDir>${project.basedir}/src/main</srcDir>
						<transDir>${project.basedir}/src/l10n</transDir>

						<!-- Use Zanata's crowd-sourcing feature to copy identical translations to our
							project. -->
						<!-- <copyTrans>true</copyTrans> -->

						<!-- <useCache>false</useCache> -->
						<!-- <dryRun>true</dryRun> -->
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.commonjava.maven.plugins</groupId>
										<artifactId>directory-maven-plugin</artifactId>
										<versionRange>[0.1,)</versionRange>
										<goals>
											<goal>highest-basedir</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>1.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.commonjava.maven.plugins</groupId>
				<artifactId>directory-maven-plugin</artifactId>
				<version>0.1</version>
				<executions>
					<execution>
						<id>parent.path.property</id>
						<goals>
							<goal>highest-basedir</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<property>parent.basedir</property>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<!-- We only allow property, FXML, and CSS files in the java source directories.
				All other resource should go in the src/main/resources directory. -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.fxml</include>
					<include>**/*.css</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.gitkeep</exclude>
				</excludes>
			</resource>

			<!-- generated i18n translation files -->
			<resource>
				<directory>src/l10n/java</directory>
				<excludes>
					<exclude>**/*.gitkeep</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/l10n/resources</directory>
				<excludes>
					<exclude>**/*.gitkeep</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>build</id>
			<activation>
				<property>
					<name>!build.disable</name>
				</property>
			</activation>
			<modules>
				<!-- Note: Looking Glass does NOT use the issue-reporting project. -->
				<module>core</module>
				<module>core/ast</module>
				<module>core/croquet</module>
				<module>core/glrender</module>
				<module>core/i18n</module>
				<module>core/ide</module>
				<module>core/image-editor</module>
				<module>core/resources</module>
				<module>core/scenegraph</module>
				<module>core/story-api-migration</module>
				<module>core/story-api</module>
				<module>core/util</module>

				<module>distribution</module>

				<module>lookingglass/lookingglass-ide</module>
				<module>lookingglass/lookingglass-tools</module>
			</modules>
		</profile>

		<profile>
			<id>zanata</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zanata</groupId>
						<artifactId>zanata-maven-plugin</artifactId>
						<executions>
							<!-- https://zanata.ci.cloudbees.com/job/zanata-client-site/site/zanata-maven-plugin/push-module-mojo.html -->
							<execution>
								<id>zanata.push</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>push-module</goal>
								</goals>
							</execution>
							<!-- https://zanata.ci.cloudbees.com/job/zanata-client-site/site/zanata-maven-plugin/pull-module-mojo.html -->
							<execution>
								<id>zanata.pull</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>pull-module</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- The profile is used for localizers to pull and test their localizations -->
		<!-- $ mvn compile -Pbuild,!sign-jar -Dzanata.locales=es,es-ES,es-CR -->
		<!-- or use Eclipse launcher: Zanata - Test Locales -->
		<profile>
			<id>zanata-pull</id>
			<activation>
				<property>
					<name>zanata.locales</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zanata</groupId>
						<artifactId>zanata-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>zanata.pull.locale</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>pull-module</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>package-distribution</id>
			<activation>
				<property>
					<name>distribution.package</name>
				</property>
			</activation>
			<modules>
				<module>core/resources</module>
				<module>distribution</module>
			</modules>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>edu.wustl.lookingglass</id>
			<name>Looking Glass Repository</name>
			<url>https://maven.lookingglass.wustl.edu/lookingglass/</url>
		</repository>
		<repository>
			<id>edu.wustl.lookingglass.external</id>
			<name>Looking Glass External Repository</name>
			<url>https://maven.lookingglass.wustl.edu/external/</url>
		</repository>
		<repository>
			<id>edu.wustl.lookingglass.nonfree</id>
			<name>Looking Glass Non-Free Repository</name>
			<url>https://maven.lookingglass.wustl.edu/nonfree/</url>
		</repository>
		<repository>
			<id>org.alice</id>
			<name>Alice Repository</name>
			<url>http://maven.alice.org/alice</url>
		</repository>
		<repository>
			<id>org.alice.external</id>
			<name>Alice External Repository</name>
			<url>http://maven.alice.org/external</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>edu.wustl.lookingglass</id>
			<name>Looking Glass Repository</name>
			<url>https://maven.lookingglass.wustl.edu/lookingglass/</url>
		</pluginRepository>
		<pluginRepository>
			<id>edu.wustl.lookingglass.external</id>
			<name>Looking Glass External Repository</name>
			<url>https://maven.lookingglass.wustl.edu/external/</url>
		</pluginRepository>
		<pluginRepository>
			<id>edu.wustl.lookingglass.nonfree</id>
			<name>Looking Glass Non-Free Repository</name>
			<url>https://maven.lookingglass.wustl.edu/nonfree/</url>
		</pluginRepository>
		<pluginRepository>
			<id>org.alice</id>
			<name>Alice Repository</name>
			<url>http://maven.alice.org/alice</url>
		</pluginRepository>
		<pluginRepository>
			<id>org.alice.external</id>
			<name>Alice External Repository</name>
			<url>http://maven.alice.org/external</url>
		</pluginRepository>
	</pluginRepositories>

</project>
